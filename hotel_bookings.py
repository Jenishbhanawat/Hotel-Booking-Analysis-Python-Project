# -*- coding: utf-8 -*-
"""Hotel_Bookings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZKoH60n0B0asrPTCWY4lI15EDLflmSZK
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb

from google.colab import files
uploaded = files.upload()

df = pd.read_csv("hotel_bookings.csv", encoding = "unicode_escape")

"""Data Exploration and Cleaning"""

df.shape

df.columns

df.info()

# changing data type of reservation_status_date to datetime
df["reservation_status_date"] = df["reservation_status_date"].astype(np.datetime64)

#finding unique values of all columns whose datatype is object
for columns in df.describe(include = "object"):
  print(columns)
  print(df[columns].unique())
  print("------------------")

#checking null values
df.isnull().sum()

#dropping column with very high null values and deleting rows with null values which are not much high number
del[[df["agent"],df["company"]]]

df.dropna(inplace = True)

df.describe()

#as you can see max value in adr is 5400 which is outliner so you want to remove it
df = df[df["adr"] < 5400]

"""Data Analysis and Visualizations"""

data1 = df["is_canceled"].value_counts(normalize = True)

data1

#barplot showing canceled reservations and not-canceled reservations
ax = sb.countplot(x = "is_canceled", data = df)
plt.title("Cancel vs Not Cancel")
plt.ylabel("Counts")
for bars in ax.containers:
  ax.bar_label(bars)

#clustered column chart showing resevation status in different hotels
qw = sb.countplot(x = "hotel", hue = "is_canceled", data = df)
sb.set(rc = {"figure.figsize" : (7,6)})
plt.ylabel("No of Reservations")
plt.title("Reservation Status in Different Hotels")
for bars in qw.containers:
  qw.bar_label(bars)

#distribution of cancelled and non canceled reservations in both type of hotels
resort_hotel = df[df["hotel"] == "Resort Hotel"]
city_hotel = df[df["hotel"] == "City Hotel"]

resort = resort_hotel["is_canceled"].value_counts()

plt.pie(resort,labels = resort.index, autopct = "%1.1f%%")

city = city_hotel['is_canceled'].value_counts()

plt.pie(city, labels = city.index, autopct = "%1.1f%%")

#from above pie charts we conclude the cancelation rate is much higher in city hotels compared to resprt hotels.

#showing average adr for both types of hotels vs date using scatter plot
rmean = resort_hotel.groupby('reservation_status_date').agg({"adr":"mean"})
cmean = city_hotel.groupby("reservation_status_date").agg({"adr":"mean"})

sb.scatterplot(x = rmean.index, y = rmean["adr"], label = "resort hotel")
sb.scatterplot(x = cmean.index, y = cmean["adr"], label = "city hotel")
plt.legend(fontsize = 15)
sb.set(rc = {"figure.figsize": (15,8)})

#adding month column from reservation_start_date column
df["month"] = df["reservation_status_date"].dt.month

#per month count of canceled and non-canceled reservations
sb.countplot(x = df["month"],hue = "is_canceled", data = df)
plt.title("Reservation Status per Month")
plt.ylabel("Number of Reservations")

#average adr per month for cancelled reservations
data20 = df[df["is_canceled"] == "yes"]
data40 = data20.groupby("month").agg({"adr" : "sum"})
sb.barplot(x = data40.index, y = "adr", data = data40)
plt.title("Average ADR per Month for Canceled Reservations")

#top 10 countries having highest number of canceled reservations
top_10 = data20["country"].value_counts()
top10 = top_10[1:11]
plt.pie(top10, labels = top10.index, autopct = "%1.1f%%")
sb.set(rc = {"figure.figsize" : (8,6)})

#number of reservations market segment wise
data100 =  df["market_segment"].value_counts()
plt.pie(data100, labels = data100.index, autopct = "%1.1f%%" )
sb.set(rc = {"figure.figsize": (8,6)})



#number of canceled reservations market segment wise
data200 = data20["market_segment"].value_counts()
plt.pie(data200, labels = data200.index, autopct = "%1.1f%%")
sb.set(rc = {"figure.figsize": (8,6)})